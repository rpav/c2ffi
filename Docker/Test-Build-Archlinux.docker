# Using Ubuntu 20.04 seems to be simplest way to get an LLVM-11 that works
FROM archlinux:latest
RUN pacman --noconfirm -Syu --noconfirm llvm clang cmake make

# Downgrade from LLVM/Clang 11.1.0 to 11.0.1
RUN cd /tmp && \
        curl -L -O https://aur.archlinux.org/cgit/aur.git/snapshot/downgrade.tar.gz && \
        tar xzf downgrade.tar.gz && \
        cd downgrade && \
        cp /usr/sbin/makepkg . && \
        sed -i 's/if (( EUID == 0 )); then/if false; then/' ./makepkg && \
        pacman --noconfirm -S fakeroot pacman-contrib && \
        ./makepkg -si --noconfirm && \
        rm -rf /tmp/downgrade* && \
        echo "IgnorePkg = llvm" >> /etc/pacman.conf && \
        echo "IgnorePkg = clang" >> /etc/pacman.conf && \
        downgrade --ala-only llvm=11.0.1-2 clang=11.0.1-1 -- --noconfirm

# Copy the source into the Docker container
RUN mkdir -p /c2ffi
COPY / /c2ffi
WORKDIR /c2ffi

# Build c2ffi
RUN cd /c2ffi && \
        rm -rf build && mkdir -p build && cd build && \
        cmake -DBUILD_CONFIG=Release .. && make

# As a sanity check, make sure the binary we built can be executed
RUN /c2ffi/build/bin/c2ffi --help
